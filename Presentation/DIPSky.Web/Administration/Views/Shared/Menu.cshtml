@using Telerik.Web.Mvc.UI;
@using DIPSky.Web.Framework.Web;
@using DIPSky.Services.Security;
@{
    //load and register sitemap
    if (!Telerik.Web.Mvc.SiteMapManager.SiteMaps.ContainsKey("admin"))
    {
        Telerik.Web.Mvc.SiteMapManager.SiteMaps.Register<Telerik.Web.Mvc.XmlSiteMap>("admin", sitemap =>
            sitemap.LoadFrom("~/Administration/sitemap.config"));
    }
    
    //menu plugin
    var adminMenuPlugins = EngineContext.Current.Resolve<DIPSky.Core.Plugins.IPluginFinder>()
        .GetPlugins<IAdminMenuPlugin>()
        .Where(x => x.Authenticate())
        .ToList();
        
    //permission service
    var permissionService = EngineContext.Current.Resolve<IPermissionService>();
}
@{
    Html.Telerik().Menu().Name("Admin")
    .BindTo("admin", (item, siteMapNode) =>
    {
        if (!String.IsNullOrWhiteSpace(item.ControllerName))
        {
            //apply admin area as described here - http://www.DIPSky.com/boards/t/20478/broken-menus-in-admin-area-whilst-trying-to-make-a-plugin-admin-page.aspx
            item.RouteValues = new RouteValueDictionary() 
            { 
                { "area", "Admin" }
            };
        }
        
        var imageUrl = siteMapNode.Attributes["ImageUrl"];
        if (imageUrl != null && !string.IsNullOrEmpty(imageUrl.ToString()))
        {
            item.ImageUrl = imageUrl.ToString();
        }
        
        var resourceName = siteMapNode.Attributes["DIPSkyResource"];
        if (resourceName != null && !string.IsNullOrEmpty(resourceName.ToString()))
        {
            item.Text = T(resourceName.ToString()).ToHtmlString();
        }

        if (ViewBag.SelectedMenuItem == item.Text)
        {
            item.Selected = true;
        }

        var permissionNames = siteMapNode.Attributes["PermissionNames"];
        if (permissionNames != null && !string.IsNullOrEmpty(permissionNames.ToString()))
        {
            item.Visible = permissionNames.ToString().Split(new char[] { ',' }, StringSplitOptions.RemoveEmptyEntries)
                .Any(permissionName => permissionService.Authorize(permissionName.Trim()));
        } 
    })
    .Items(x =>
    {
        if (adminMenuPlugins.Any())
        {
                x.Add().Text(T("Admin.Plugins").ToHtmlString()).Items(y =>
                {
                    foreach (var adminMenuPlugin in adminMenuPlugins)
                    {
                        adminMenuPlugin.BuildMenuItem(y.Add());
                    }
                });
        }
    })
    .OpenOnClick(false)
    .Render();
}
